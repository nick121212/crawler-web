{
  "_args": [
    [
      {
        "hosted": {
          "directUrl": "https://raw.githubusercontent.com/iamisti/mdDataTable/master/package.json",
          "gitUrl": "git://github.com/iamisti/mdDataTable.git",
          "httpsUrl": "git+https://github.com/iamisti/mdDataTable.git",
          "shortcut": "github:iamisti/mdDataTable",
          "ssh": "git@github.com:iamisti/mdDataTable.git",
          "sshUrl": "git+ssh://git@github.com/iamisti/mdDataTable.git",
          "type": "github"
        },
        "name": null,
        "raw": "github:iamisti/mdDataTable",
        "rawSpec": "github:iamisti/mdDataTable",
        "scope": null,
        "spec": "github:iamisti/mdDataTable",
        "type": "hosted"
      },
      "/Users/NICK/srv/blessing/public"
    ]
  ],
  "_from": "iamisti/mdDataTable",
  "_id": "md-data-table@1.6.8",
  "_inCache": true,
  "_installable": true,
  "_location": "/md-data-table",
  "_phantomChildren": {
    "angular": "1.5.8",
    "aws-sign2": "0.6.0",
    "caseless": "0.11.0",
    "combined-stream": "1.0.5",
    "core-util-is": "1.0.2",
    "extend": "3.0.0",
    "extract-zip": "1.5.0",
    "forever-agent": "0.6.1",
    "form-data": "1.0.1",
    "graceful-fs": "4.1.5",
    "har-validator": "2.0.6",
    "hasha": "2.2.0",
    "hawk": "3.1.3",
    "http-signature": "1.1.1",
    "inherits": "2.0.1",
    "is-typedarray": "1.0.0",
    "isarray": "1.0.0",
    "isstream": "0.1.2",
    "json-stringify-safe": "5.0.1",
    "jsonfile": "2.3.1",
    "kew": "0.7.0",
    "klaw": "1.3.0",
    "mime-types": "2.1.11",
    "node-uuid": "1.4.7",
    "oauth-sign": "0.8.2",
    "path-is-absolute": "1.0.0",
    "process-nextick-args": "1.0.7",
    "progress": "1.1.8",
    "request-progress": "2.0.1",
    "rimraf": "2.5.4",
    "string_decoder": "0.10.31",
    "stringstream": "0.0.5",
    "tunnel-agent": "0.4.3",
    "util-deprecate": "1.0.2",
    "which": "1.2.10"
  },
  "_requested": {
    "hosted": {
      "directUrl": "https://raw.githubusercontent.com/iamisti/mdDataTable/master/package.json",
      "gitUrl": "git://github.com/iamisti/mdDataTable.git",
      "httpsUrl": "git+https://github.com/iamisti/mdDataTable.git",
      "shortcut": "github:iamisti/mdDataTable",
      "ssh": "git@github.com:iamisti/mdDataTable.git",
      "sshUrl": "git+ssh://git@github.com/iamisti/mdDataTable.git",
      "type": "github"
    },
    "name": null,
    "raw": "github:iamisti/mdDataTable",
    "rawSpec": "github:iamisti/mdDataTable",
    "scope": null,
    "spec": "github:iamisti/mdDataTable",
    "type": "hosted"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "git://github.com/iamisti/mdDataTable.git#46d884b6a3e9041fc4d1bb01c858a51223fd0945",
  "_shasum": "618991bb1eb5c89bf967e5ac413956171151e176",
  "_shrinkwrap": null,
  "_spec": "github:iamisti/mdDataTable",
  "_where": "/Users/NICK/srv/blessing/public",
  "author": {
    "email": "programtervezo@gmail.com",
    "name": "Istvan Fodor"
  },
  "bugs": {
    "url": "https://github.com/iamisti/mdDataTable/issues"
  },
  "dependencies": {
    "angular": "~1.5.7",
    "angular-animate": "~1.5.7",
    "angular-material": "1.1.0-rc.5",
    "angular-material-icons": "~v0.6.0",
    "angular-sanitize": "~1.5.7",
    "jquery": "~2.1.4",
    "jshint": "^2.9.2",
    "lodash": "~3.10.1",
    "phantomjs": "^2.1.7"
  },
  "description": "> Angular2 and Angular2 Material version of this plugin is under development.  If you want to be notified for the first release, please star the project here: [`md-data-table2`](https://github.com/iamisti/mdDataTable2)",
  "devDependencies": {
    "codeclimate-test-reporter": "~0.1.1",
    "event-stream": "~3.3.4",
    "fstream": "^1.0.10",
    "glob": "~6.0.2",
    "gulp": "~3.9.0",
    "gulp-angular-filesort": "~1.1.1",
    "gulp-angular-templatecache": "~1.8.0",
    "gulp-cached": "~1.1.0",
    "gulp-compass": "~2.1.0",
    "gulp-concat": "~2.6.0",
    "gulp-connect": "~2.3.1",
    "gulp-inject": "~3.0.0",
    "gulp-jshint": "~2.0.0",
    "gulp-karma": "~0.0.5",
    "gulp-ng-annotate": "~1.1.0",
    "gulp-ngdocs": "^0.2.13",
    "gulp-plumber": "~1.0.1",
    "gulp-rename": "~1.2.2",
    "gulp-rimraf": "~0.2.0",
    "gulp-uglify": "~1.5.1",
    "gulp-watch": "~4.3.5",
    "jasmine-core": "^2.4.1",
    "jasmine-reporters": "~2.1.0",
    "karma": "~0.13.15",
    "karma-coverage": "~0.5.3",
    "karma-jasmine": "~0.3.6",
    "karma-jasmine-jquery": "~0.1.1",
    "karma-ng-html2js-preprocessor": "~0.2.0",
    "karma-ng-scenario": "~0.1.0",
    "karma-phantomjs-launcher": "~0.2.1",
    "karma-traceur-preprocessor": "~0.4.0",
    "lodash": "~3.10.1",
    "main-bower-files": "~2.11.0",
    "run-sequence": "~1.1.5",
    "traceur": "~0.0.95"
  },
  "gitHead": "46d884b6a3e9041fc4d1bb01c858a51223fd0945",
  "homepage": "https://github.com/iamisti/mdDataTable#readme",
  "license": "MIT",
  "name": "md-data-table",
  "optionalDependencies": {},
  "readme": "> Angular2 and Angular2 Material version of this plugin is under development. \nIf you want to be notified for the first release, please star the project here: [`md-data-table2`](https://github.com/iamisti/mdDataTable2)\n\n## Usage statistics\n\n[![NPM](https://nodei.co/npm-dl/md-data-table.png?months=6&height=3)](https://nodei.co/npm/md-data-table/)\n[![NPM](https://nodei.co/npm/md-data-table.png?downloads=true&downloadRank=true&stars=true)](https://nodei.co/npm/md-data-table/)\n\n[![Build Status](https://travis-ci.org/iamisti/mdDataTable.svg?branch=master)](https://travis-ci.org/iamisti/mdDataTable) \n[![Code Climate](https://codeclimate.com/github/iamisti/mdDataTable/badges/gpa.svg)](https://codeclimate.com/github/iamisti/mdDataTable) \n[![Test Coverage](https://codeclimate.com/github/iamisti/md-data-table/badges/coverage.svg?branch=master)](https://codeclimate.com/github/iamisti/md-data-table/coverage) \n[![Dependency Status](https://gemnasium.com/iamisti/mdDataTable.svg)](https://gemnasium.com/iamisti/mdDataTable)\n[![Codacy Badge](https://api.codacy.com/project/badge/grade/fdcfe195e886430aaefefa54c972d3f7)](https://www.codacy.com/app/programtervezo/mdDataTable)\n\nAngular material table. Complete implementation of google material design based on angular material components.\n\n> Live demo http://iamisti.github.io/mdDataTable/\n\n## Install\n\n1. `bower install mdDataTable` or `npm install mdDataTable` or [download the source](https://github.com/iamisti/mdDataTable/archive/master.zip).\n2. Make sure the `mdDataTable` lib is loaded. It's served in three different files: `md-data-table-style.css`, `md-data-table.js`, `md-data-table-templates.js`\n3. Add `mdDataTable` as a dependency of your app.\n\n## UI&UX driven by google data table\nhttp://www.google.com/design/spec/components/data-tables.html\n\n## Table of contents\n[Overview](#overview)\n\n[Table attributes](#table-attributes)\n - selectable-rows\n - virtual-repeat\n - delete-row-callback\n - selected-row-callback\n - sortable-columns\n - animate-sort-icon\n - ripple-effect\n - ! title-overflow-handler\n - table-card \n - paginated-rows\n - alternate-headers\n - mdt-row\n - mdt-row-paginator\n - mdt-row-paginator-error-message\n - mdt-row-paginator-no-results-message\n - mdt-trigger-request\n - mdt-translations\n\n[Column attributes (`mdt-column`)](#column-attributes)\n - align-rule\n - column-definition\n - ! sortable-rows-default\n - sort-by\n\n[Row attributes (`mdt-row`)](#data-row-attributes)\n - table-row-id\n\n[Cell attributes (`mdt-cell`)](#data-cell-attributes)\n - ! inline-menu\n - editable-field\n - html-content\n \n[Custom cell content (`mdt-custom-cell`)](#custom-cell-content)\n - column-key\n\n\n## Overview\n> In its simplest form, a data table contains a top row of column names, and rows for data.\n\n![A selected table row](http://material-design.storage.googleapis.com/publish/material_v_4/material_ext_publish/0B3mOPoJlxiFhV25CdGNXYzA4cXM/components_datatables_structure_basictable.png)\n\n## Table attributes\n> Global attributes for the table\n\n| Available        | Params                                         | Type          | Details       |\n| ---------------- | ---------------------------------------------- | ------------- | ------------- |\n|:white_check_mark:| selectable-rows                                | Boolean       | optional, checkboxes accompany each row if need to select or manipulate data |\n|:white_check_mark:| virtual-repeat                                 | Boolean       | optional, when set, virtual scrolling will be applied to the table. You must set a fixed height to the `.md-virtual-repeat-container` class in order to make it work properly. Since virtual scrolling is working with fixed height. |\n|:white_check_mark:| delete-row-callback                            | Function      | optional, callback function when deleting rows. The callback will be called with the array of the deleted row ids. Don't forget to specify `table-row-id` for `mdt-row`. If you do, it will return the deleted rows data. |\n|:white_check_mark:| selected-row-callback                          | Function      | optional, callback function when selecting rows. The callback will be called with the array of the selected row ids. Don't forget to specify `table-row-id` for `mdt-row`. If you do, it will return the selected rows data. |\n![alt tag](http://material-design.storage.googleapis.com/publish/material_v_4/material_ext_publish/0B3mOPoJlxiFhcWNyQl9xYmRkQnc/components_datatables_interaction_selectedrow.png)\n\n| Available        | Params                                         | Type          | Details       |\n| ---------------- | ---------------------------------------------- | ------------- | ------------- |\n|:white_check_mark:| sortable-columns                               | Boolean       | optional, if enabled, sort data and display a sorted state in the column header. If the user clicks on a column that is already sorted, reverse the sort order and rotate the sort icon. Use `sortable-rows-default` attribute directive on a column which intended to be the default sortable column |\n|:white_check_mark:| animate-sort-icon                              | Boolean       | optional, if enabled, sort icon will be animated on change |\n|:white_check_mark:| ripple-effect                                  | Boolean       | optional, if enabled, ripple effect will be applied on the column names when clicked |\n![Table with an ascending sorted column](http://material-design.storage.googleapis.com/publish/material_v_4/material_ext_publish/0B3mOPoJlxiFhMW1haUJDRWJKLUk/components_datatables_interaction_sortedcolumn.png)\n\n| Available        | Params                             | ChildParams                     | Type          | Details       |\n| ---------------- | ---------------------------------- | ------------------------------- | ------------- | ------------- |\n|:x:               | title-overflow-handler             |                                 | String        | optional, Sometimes, column names don’t fit in a container in between columns. There are two options to handle this |\n|:x:               |                                    | _(default)_ truncateColumnNames | -             | Shorten the column name and display it in full on hover |\n|:x:               |                                    | useHorizontalScrollingOnTable   | -             | Display the full column name and enable horizontal scrolling in the table container |\n![Long column names truncated with an ellipse](http://material-design.storage.googleapis.com/publish/material_v_4/material_ext_publish/0B3mOPoJlxiFhMkVuNC1Zd3QyZ1k/components_datatables_interaction_longtitle1.png)\n![Hovering over a truncated column name](http://material-design.storage.googleapis.com/publish/material_v_4/material_ext_publish/0B3mOPoJlxiFhclI1SGllZkZQTkE/components_datatables_interaction_longtitle2.png)\n\n| Available        | Params                                     | ChildParams                     | Type          | Details       |\n| -----------------| ------------------------------------------ | ------------------------------- | ------------- | ------------- |\n|:white_check_mark:| table-card                                 |                                 | Object        | optional, tables can be embedded within a card, with table navigation and data manipulation tools available at the top and bottom. |\n|:white_check_mark:|                                            | title                           | String        | The title of the table card |\n|:x:               |                                            | actionIcons                     | Boolean       | Card action icons (header and footer) |\n|:white_check_mark:|                                            | visible                         | Boolean       | The visibility of the table card |\n![Table card with header and footer](http://material-design.storage.googleapis.com/publish/material_v_4/material_ext_publish/0B3mOPoJlxiFhUTEwa21JUEtza0k/components_datatables_cards_tablecard.png)\n\n| Available        | Params                                     | ChildParams                     | Type          | Details|\n| -----------------| ------------------------------------------ | ------------------------------- | ------------- | ------ |\n|:white_check_mark:| paginated-rows                             |                                 | Object        | optional, if set, then basic pagination will applied to the bottom of the table. |\n|:white_check_mark:|                                            | isEnabled                       | Boolean       | Optional, if provided then basic pagination will applied to the bottom of the table |\n|:white_check_mark:|                                            | rowsPerPageValues               | Array         | Optional, if provided then it will apply the rows per page values from the given arguments. Example: [5,10,20] |\n![Table card with header and footer](http://material-design.storage.googleapis.com/publish/material_v_4/material_ext_publish/0B3mOPoJlxiFhUTEwa21JUEtza0k/components_datatables_cards_tablecard.png)\n\n\n| Available        | Params                             | ChildParams                     | Type          | Details       |\n| ---------------- |----------------------------------- | ------------------------------- | ------------- | ------------- |\n|:white_check_mark:| alternate-headers                  |                                 | String        | optional, some table cards may require headers with actions instead of titles. Two possible approaches to this are to display persistent actions, or a contextual header that activates when items are selected |\n|:x:               |                                    | persistentActions               | -             | Shows persistent action buttons in header |\n|:white_check_mark:|                                    | contextual                      | -             | Shows contextual content depending on what has been selected |\n![persistent and contextual headers](http://material-design.storage.googleapis.com/publish/material_v_4/material_ext_publish/0B3mOPoJlxiFhemNvbnZOcXNpODQ/components_datatables_cards_altheaders.png)\n\n| Available        | Params                             | ChildParams                     | Type          | Details       |\n| ---------------- |----------------------------------- | ------------------------------- | ------------- | ------------- |\n|:white_check_mark:| mdt-row                            |                                 | Object        | optional, makes possible to provide row data by passing the information through this attribute. Makes it possible to listen on data changes. |\n|:white_check_mark:|                                    | data                            | Array         | required, The input data |\n|:white_check_mark:|                                    | table-row-id-key                | String|Integer| optional (same as `table-row-id`), defines the id of the row. Useful if you specified the callback function (`delete-row-callback`) for deleting a row. |\n|:white_check_mark:|                                    | column-keys                     | Array         | required, property names of the passed data array. Makes it possible to configure which property should go in which column. |\n|:white_check_mark:| mdt-translations                   |                                 | Object        | optional, makes it possible to provide a custom translated texts in the table. |\n|:white_check_mark:|                                    | rowsPerPage                     | String        | When you need to select the amount of rows visible on the page, this label appears next to the dropdown |\n|:white_check_mark:|                                    | largeEditDialog.saveButtonLabel | String        | When edit mode is on, in the modal you can click on a button which has the 'Save' label. |\n|:white_check_mark:|                                    | largeEditDialog.cancelButtonLabel| String        | When edit mode is on, in the modal you can click on a button which has the : 'Cancel' label. |\nHtml support is available for `mdt-row`, see more: [Custom cell content (`mdt-custom-cell`)](#custom-cell-content)\n\n## Example usage for `mdt-row` attribute:\n```html\n<mdt-table\n    selectable-rows=\"true\"\n    table-card=\"{title: Nutrition, actionIcons: true}\"\n    mdt-row=\"{\n        'data': filteredItems,\n        'table-row-id-key': 'id',\n        'column-keys': ['name', 'calories', 'fat', 'carbs', 'protein', 'sodium', 'calcium', 'iron']\n    }\">\n\n    <mdt-header-row>\n        <mdt-column>Dessert (100g serving)</mdt-column>\n        <mdt-column>Type</mdt-column>\n        <mdt-column>Calories</mdt-column>\n        <mdt-column sortable-rows-default>Fat (g)</mdt-column>\n        <mdt-column>Carbs (g)</mdt-column>\n        <mdt-column>Protein (g)</mdt-column>\n    </mdt-header-row>\n\n    <!-- notice we didn't provide mdt-row here -->\n</mdt-table>\n```\n\n| Available        | Params                             | Type          | Details       |\n| ---------------- |----------------------------------- | ------------- | ------------- |\n|:white_check_mark:| mdt-row-paginator                  | Function      | optional, makes possible to provide a callback function which returns a promise, providing the data for the table. Has two parameters: `page` and `pageSize` |\n|:white_check_mark:| mdt-row-paginator-error-message    | String        | optional, overrides default error mesasge when promise gets rejected by the paginator function. |\n|:white_check_mark:| mdt-row-paginator-no-results-message    | String        | optional, overrides default 'no results' message when there are no results in the table. |\n|:white_check_mark:| mdt-trigger-request                | function(loadPageCallback) | optional, if `mdt-row-paginator` set, provides a callback function for manually triggering an ajax request. Can be useful when you want to populate the results in the table manually. (e.g.: having a search field in your page which then can trigger a new request in the table to show the results based on that filter.  |\n\n## Example usage for `mdt-row-paginator` attribute:\n```html\n<mdt-table\n    paginated-rows=\"{isEnabled: true, rowsPerPageValues: [5,10,20,100]}\"\n    mdt-row-paginator=\"paginatorCallback(page, pageSize)\"\n    mdt-row-paginator-error-message=\"Error happened during loading nutritions.\"\n    mdt-row=\"{\n        'table-row-id-key': 'fields.item_id',\n        'column-keys': [\n            'fields.item_name',\n            'fields.nf_calories',\n            'fields.nf_total_fat',\n            'fields.nf_total_carbohydrate',\n            'fields.nf_protein',\n            'fields.nf_sodium',\n            'fields.nf_calcium_dv',\n            'fields.nf_iron_dv'\n        ],\n    }\">\n\n    <mdt-header-row>\n        <mdt-column align-rule=\"left\">Dessert (100g serving)</mdt-column>\n        <mdt-column align-rule=\"right\">Calories</mdt-column>\n        <mdt-column align-rule=\"right\">Fat (g)</mdt-column>\n        <mdt-column align-rule=\"right\">Carbs (g)</mdt-column>\n        <mdt-column align-rule=\"right\">Protein (g)</mdt-column>\n        <mdt-column align-rule=\"right\">Sodium (mg)</mdt-column>\n        <mdt-column align-rule=\"right\">Calcium (%)</mdt-column>\n        <mdt-column align-rule=\"right\">Iron (%)</mdt-column>\n    </mdt-header-row>\n</mdt-table>\n```\n\n\n## Column attributes\n>`mdt-column` attributes\n\n| Available        | Params                                         | ChildPArams         | Type         | Details         |\n| ---------------- | ---------------------------------------------- | --------------------|------------- | --------------- |\n|:white_check_mark:| align-rule                                     |                     |String        | if provided, align the text to the needed direction for the entire column (note, that it aligns the data that belongs to the column) |\n|:white_check_mark:|                                                | _(default)_ left    |              | left-align content \n|:white_check_mark:|                                                | right               |              | right-align content \n\n\n| Available        | Params                                         | Type          | Details         |\n| ---------------- | ---------------------------------------------- | ------------- | --------------- |\n|:white_check_mark:| column-definition                              | String        | if provided, display a tooltip on hover. If sorting is enabled, display a light sort icon upon hover, which indicates that the column is sortable. |\n![Column definition on hover](http://material-design.storage.googleapis.com/publish/material_v_4/material_ext_publish/0B3mOPoJlxiFhenh5SWhFdFlyajg/components_datatables_interaction_tooltip.png)\n\n| Available        | Params                                         | Type          | Details         |\n| -----------------| ---------------------------------------------- | ------------- | --------------- |\n|:x:               | sortable-rows-default                          | -             | When sortable-columns is applied to the table, it marks the column as the default sorting column |\n|:white_check_mark:| sort-by                                        | Function      | if provided, used as the iteratee during sort operations to transform the cell value to a value that can be ranked in order. |\n\n\n# Data-Row attributes \n> `mdt-row` attributes\n\n| Available        | Params                                         | Type          | Details         |\n| ---------------- | ---------------------------------------------- | ------------- | --------------- |\n|:white_check_mark:| table-row-id                                   | String|Integer| defines the id of the row. Useful if you specified the callback function (`delete-row-callback`) for deleting a row. |\n\n## Custom cell content\n>`mdt-custom-cell` attributes\n\nIf you are using `mdt-row` attribute to load your data (which is only way of you are dealing with ajax contents), you can now have custom content for each cells you defined.\n\n| Available        | Params                                         | ChildParams        | Type          | Details         |\n| ---------------- | ---------------------------------------------- | ------------------ | ------------- | --------------- |\n|:white_check_mark:               | column-key                                     |                    | String        | required, specifies the column in the rows. |\nThere is only one scope variable that you can use in your template, and it's called `value`. Check the example.\n\n## Example usage for `mdt-custom-cell`:\n```html\n<mdt-table>\n    <mdt-table mdt-row=\"{'data': filteredItems,\n                      'table-row-id-key': 'id',\n                      'column-keys': ['name', 'calories', 'fat', 'carbs', 'protein', 'sodium', 'calcium', 'iron']}\">\n        <mdt-header-row>\n            <mdt-column align-rule=\"left\">Dessert (100g serving)</mdt-column>\n            <mdt-column align-rule=\"right\">Calories</mdt-column>\n            <mdt-column align-rule=\"right\">Fat (g)</mdt-column>\n            <mdt-column align-rule=\"right\">Carbs (g)</mdt-column>\n            <mdt-column align-rule=\"right\">Protein (g)</mdt-column>\n            <mdt-column align-rule=\"right\">Sodium (mg)</mdt-column>\n            <mdt-column align-rule=\"right\">Calcium (%)</mdt-column>\n            <mdt-column align-rule=\"right\">Iron (%)</mdt-column>\n        </mdt-header-row>\n\n        <!-- here you have your own, customised cell for every 'protein' column -->\n        <mdt-custom-cell column-key=\"protein\">\n            <span ng-class=\"{'red': value > 5, 'green': value <= 5}\">{{value}}</span>\n        </mdt-custom-cell>\n    </mdt-table>\n</mdt-table>\n```\n\n\n# Data-Cell attributes \n>`mdt-cell` attributes\n\n| Available        | Params                                         | ChildParams        | Type          | Details         |\n| ---------------- | ---------------------------------------------- | ------------------ | ------------- | --------------- |\n|:x:               | inline-menu                                    |                    | Array         | if provided, users can select from a predefined list of options. In this scenario, a menu component directly embedded in the table |\n![A table with inline menus](http://material-design.storage.googleapis.com/publish/material_v_4/material_ext_publish/0B3mOPoJlxiFhblJlanhBSHYzNWs/components_datatables_interaction_inlinemenus1.png)\n![An expanded inline menu](http://material-design.storage.googleapis.com/publish/material_v_4/material_ext_publish/0B3mOPoJlxiFhV200T3NSWG9TZFU/components_datatables_interaction_inlinemenus2.png)\n\n| Available               | Params                                         | ChildParams        | Type          | Details         |\n| ----------------------- | ---------------------------------------------- | ------------------ | ------------- | --------------- |\n|:white_check_mark:                      | editable-field                                 |                    | String        | if provided, provides basic text editing. Include editable fields within a table and denote them using placeholder text(if empty). You can use a simple edit dialog with just a text field, or display a full dialog component on click. |\n|:white_check_mark:                      |                                                | smallEditDialog    | -             | A simple, one-field edit dialog on click |\n|:white_check_mark:                      |                                                | largeEditDialog    | -             | A complex, flexible edit edit dialog on click |\n|:white_check_mark:                      | editable-field-title                           |                    | String        | If set, then it sets the title of the dialog. (only for `largeEditDialog`) |\n|:white_check_mark:                      | editable-field-max-length                      |                    | Number        | if set, then it sets the maximum length of the field. |\n![An editable table cell with placeholder text](http://material-design.storage.googleapis.com/publish/material_v_4/material_ext_publish/0B3mOPoJlxiFhZTViOVFXZTNucGs/components_datatables_interaction_editing1.png)\n![A simple, one-field edit dialog](http://material-design.storage.googleapis.com/publish/material_v_4/material_ext_publish/0B3mOPoJlxiFhZHhJSVhoT2JuTkE/components_datatables_interaction_editing2.png)\n![A complex, flexible edit dialog](http://material-design.storage.googleapis.com/publish/material_v_4/material_ext_publish/0B3mOPoJlxiFhZkY4b1VkME5QcXM/components_datatables_interaction_editing3.png)\n![Icon-based edit affordance](http://material-design.storage.googleapis.com/publish/material_v_4/material_ext_publish/0B3mOPoJlxiFhazJZa2VmSU5ldTQ/components_datatables_interaction_editing4.png)\n\n| Available        | Params                                         | ChildParams        | Type          | Details         |\n| ---------------- | ---------------------------------------------- | ------------------ | ------------- | --------------- |\n|:white_check_mark:| html-content                                   |                    | Boolean       | When the cell content is not a simple value (html content) |\n\n\n## Example usage:\n```html\n<mdt-table\n    selectable-rows=\"true\"\n    table-card=\"{title: Nutrition, actionIcons: true}\">\n\n    <mdt-header-row>\n        <!-- defining column descriptions, align content to the left -->\n        <mdt-column\n            align-rule=\"left\"\n            column-definition=\"The total amount of food energy in the given serving size.\">\n            Dessert (100g serving)\n        </mdt-column>\n\n        <!-- in case of inline menu (INLINE-MENU FEATURE DOES NOT EXIST YET) -->\n        <mdt-column inline-menu=\"[ {iceCream: 'Ice Cream', pastry: 'Pastry', other: 'Other'} ]\">Type</mdt-column>\n\n        <!-- inline text editing (EDITABLE-FIELDS FEATURE DOES NOT EXIST YET) -->\n        <mdt-column editable-field=\"textInput\">\n            Calories\n        </mdt-column>\n\n        <!-- in case of sortable columns, we can set the defaultly sortable column -->\n        <mdt-column sortable-rows-default>\n            Fat (g)\n        </mdt-column>\n        <mdt-column>Carbs (g)</mdt-column>\n        <mdt-column>Protein (g)</mdt-column>\n    </mdt-header-row>\n\n    <mdt-row ng-repeat=\"nutrition in nutritionList\">\n        <mdt-cell>Frozen Joghurt</mdt-cell>\n        <mdt-cell>159</mdt-cell>\n        <mdt-cell>6</mdt-cell>\n        <mdt-cell>24</mdt-cell>\n        <mdt-cell>4</mdt-cell>\n        <mdt-cell>87</mdt-cell>\n    </mdt-row>\n\n</mdt-table>\n```\n",
  "readmeFilename": "README.md",
  "registry": "github",
  "repository": {
    "type": "git",
    "url": "git://github.com/iamisti/mdDataTable.git"
  },
  "version": "1.6.8"
}
